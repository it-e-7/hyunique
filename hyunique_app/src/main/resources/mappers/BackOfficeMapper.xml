<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kosa5.hyunique.bo.mapper.BackOfficeMapper">

    <select id="selectAdmin" resultType="int">
    	SELECT COUNT(*)
    	FROM HY_ADMIN
    	WHERE ADMIN_ID = #{adminId} AND ADMIN_PW = #{adminPw}
    </select>
    
    <select id="selectQRCount" resultType="ProductDetailVO">
    	<![CDATA[
			SELECT *
			FROM(SELECT *
			    FROM (SELECT PRODUCT_ID, COUNT(*) AS QR_COUNT
			            FROM HY_QRTAG
			            WHERE EXTRACT( DAY FROM SYSTIMESTAMP - HY_QRTAG.TAG_DATE ) <= 1
			            GROUP BY PRODUCT_ID) Q JOIN
			            HY_PRODUCT P ON Q.PRODUCT_ID = P.PRODUCT_ID
			    ORDER BY QR_COUNT DESC)
			WHERE ROWNUM <= 30
        ]]>
    </select>
    
    <select id="selectHotProduct" resultType="BackOfficeProductVO">
    	<![CDATA[
			WITH LikesCount AS (
			    SELECT
			        P.POST_ID,
			        P.USER_ID,
			        COUNT(L.USER_ID) AS LIKE_COUNT
			    FROM HY_POST P
			    LEFT JOIN HY_STYLELIKE L ON P.POST_ID = L.POST_ID
			    WHERE P.POST_DATE > SYSDATE - #{day}
			    GROUP BY P.USER_ID, P.POST_ID
			),
			FollowersCount AS (
			    SELECT
			        FOLLOWING_ID AS USER_ID,
			        COUNT(DISTINCT F.FOLLOWER_ID) AS FOLLOWER_COUNT
			    FROM HY_FOLLOW F
			    GROUP BY FOLLOWING_ID
			),
			MaxLikes AS (
			    SELECT PRODUCT_ID, MAX_LIKE, MAX(POST_ID) AS POST_ID
			    FROM(SELECT C.PRODUCT_ID, MAX_LIKE, PP.POST_ID
			    FROM(SELECT PP.PRODUCT_ID, MAX(LIKE_COUNT) AS MAX_LIKE
			        FROM LIKESCOUNT LC JOIN POST_PIN PP ON LC.POST_ID = PP.POST_ID
			        GROUP BY PP.PRODUCT_ID) C
			        JOIN LIKESCOUNT LC ON LC.LIKE_COUNT = MAX_LIKE
			        JOIN POST_PIN PP ON (PP.POST_ID = LC.POST_ID AND PP.PRODUCT_ID = C.PRODUCT_ID))
			    GROUP BY PRODUCT_ID, MAX_LIKE
			),
			MAXLIKESPOST AS (
			    SELECT PRODUCT_ID, ML.POST_ID, MAX_LIKE, THUMBNAIL_URL, USER_NICKNAME
			    FROM MAXLIKES ML 
			        JOIN HY_POST HP ON ML.POST_ID = HP.POST_ID
			        JOIN HY_USER HU ON HP.USER_ID = HU.USER_ID
			),
			PRODUCT_SCORE AS (
			    SELECT PRODUCT_ID, SUM(WEIGHTED_SCORE) AS SCORE
			    FROM(SELECT LC.POST_ID, LC.USER_ID, LIKE_COUNT, FOLLOWER_COUNT, PP.PRODUCT_ID, (LIKE_COUNT * 1.0) * (
			                CASE
			                    WHEN FOLLOWER_COUNT = 0 THEN 2.0
			                    ELSE 2.0 - (2.0 / (1 + EXP(-0.0001 * FOLLOWER_COUNT))) + 0.6
			                END
			            ) AS WEIGHTED_SCORE
			        FROM LIKESCOUNT LC 
			            JOIN FOLLOWERSCOUNT FC ON LC.USER_ID = FC.USER_ID
			            JOIN POST_PIN PP ON LC.POST_ID = PP.POST_ID)
			    GROUP BY PRODUCT_ID
			),
			TOTAL_LIKE_COUNT AS(
			    SELECT PRODUCT_ID, TOTAL_LIKE
			    FROM (SELECT PP.PRODUCT_ID, SUM(LC.LIKE_COUNT) AS TOTAL_LIKE
			        FROM POST_PIN PP JOIN LIKESCOUNT LC ON PP.POST_ID = LC.POST_ID
			        GROUP BY PP.PRODUCT_ID)
			    WHERE TOTAL_LIKE > 0
			),
			TOTAL_TAG_COUNT AS(
			    SELECT PRODUCT_ID, COUNT(POST_ID) AS TOTAL_TAG
			    FROM POST_PIN
			    GROUP BY PRODUCT_ID
			)
			
			SELECT PS.PRODUCT_ID, PS.SCORE, HP.PRODUCT_IMG, HP.PRODUCT_BRAND, HP.PRODUCT_NAME,
			    MP.POST_ID, MP.MAX_LIKE, MP.THUMBNAIL_URL, MP.USER_NICKNAME,
			    TL.TOTAL_LIKE, TT.TOTAL_TAG
			FROM TOTAL_LIKE_COUNT TL 
			    JOIN PRODUCT_SCORE PS ON TL.PRODUCT_ID = PS.PRODUCT_ID
			    JOIN HY_PRODUCT HP ON TL.PRODUCT_ID = HP.PRODUCT_ID
			    JOIN MAXLIKESPOST MP ON TL.PRODUCT_ID = MP.PRODUCT_ID
			    JOIN TOTAL_TAG_COUNT TT ON TL.PRODUCT_ID = TT.PRODUCT_ID
			ORDER BY SCORE DESC
    	]]>
    </select>
    
</mapper>